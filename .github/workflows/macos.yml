name: macOS

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'extras/images/**'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "macOS 64",
              os: "macos-latest",
              target: "macos",
              cef_platform: "macosx64",
              project_arch: "x86_64",
            }
          - {
              name: "macOS ARM",
              os: "macos-latest",
              target: "macos",
              cef_platform: "macosarm64",
              project_arch: "arm64",
            }
    steps:
      - uses: actions/checkout@v4

      - name: Dependencies
        run: brew install create-dmg

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Upgrade PIP
        run: python3 -m pip install --upgrade pip setuptools wheel

      - name: Display Python version
        run: python3 --version

      - name: Display PIP version
        run: python3 -m pip --version

      - name: Python requirements
        run: python3 -m pip install -r requirements.txt

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.24.0"

      - name: Build
        run: |
          cmake -E make_directory build
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCEF_PLATFORM=${{ matrix.config.cef_platform }} -DCMAKE_OSX_ARCHITECTURES=${{ matrix.config.osx_arch }} -DPROJECT_ARCH=${{ matrix.config.project_arch }} -G "Xcode"
          cmake --build build --target MyApp --config Release -v

      - name: Install application certificate
        uses: apple-actions/import-codesign-certs@v2
        with:
          keychain: ${{ github.run_id }}
          keychain-password: ${{ github.run_id }}
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PWD }}

      - name: Codesign application
        run: |
          security find-identity -v
          python3 codesign.py "Developer ID Application: Paulo Coutinho (99AHAA343Q)" "build/Release/MyApp.app" "app/resources/macos/entitlements.plist" -v

      - name: Create DMG
        run: |
          python3 make.py dmg-build
          mv "MyApp.dmg" ${{ matrix.config.target }}-${{ matrix.config.cef_platform }}.dmg

      - name: Codesign DMG
        run: |
          security find-identity -v
          python3 codesign.py "Developer ID Application: Paulo Coutinho (99AHAA343Q)" "${{ matrix.config.target }}-${{ matrix.config.cef_platform }}.dmg" "app/resources/macos/entitlements.plist" -v

      - name: Notarize build
        env:
          NOTARIZATION_USERNAME: ${{ secrets.NOTARIZATION_USERNAME }}
          NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }}
        run: python3 notarize.py --dmg ${{ matrix.config.target }}-${{ matrix.config.cef_platform }}.dmg --bundle-id "com.paulocoutinho.example" --user $NOTARIZATION_USERNAME --passwd $NOTARIZATION_PASSWORD --asc-provider 54BDV6YZ73

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.config.target }}-${{ matrix.config.cef_platform }}
          path: ${{ matrix.config.target }}-${{ matrix.config.cef_platform }}.dmg

      - name: Release
        id: upload-release-asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.config.target }}-${{ matrix.config.cef_platform }}.dmg
